///
/// NitroRealFetchAutolinking.mm
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#import <Foundation/Foundation.h>
#import <NitroModules/HybridObjectRegistry.hpp>
#import "NitroRealFetch-Swift-Cxx-Umbrella.hpp"
#import <type_traits>

#include "HybridFetchSpecSwift.hpp"
#include "HybridDuplexStreamSpecSwift.hpp"

@interface NitroRealFetchAutolinking : NSObject
@end

@implementation NitroRealFetchAutolinking

+ (void) load {
  using namespace margelo::nitro;
  using namespace margelo::nitro::realfetch;

  HybridObjectRegistry::registerHybridObjectConstructor(
    "Fetch",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::realfetch::HybridFetchSpec> hybridObject = NitroRealFetch::NitroRealFetchAutolinking::createFetch();
      return hybridObject;
    }
  );
  HybridObjectRegistry::registerHybridObjectConstructor(
    "DuplexStream",
    []() -> std::shared_ptr<HybridObject> {
      std::shared_ptr<margelo::nitro::realfetch::HybridDuplexStreamSpec> hybridObject = NitroRealFetch::NitroRealFetchAutolinking::createDuplexStream();
      return hybridObject;
    }
  );
}

@end
