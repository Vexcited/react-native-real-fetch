///
/// NativeResponse.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import NitroModules

/**
 * Represents an instance of `NativeResponse`, backed by a C++ struct.
 */
public typealias NativeResponse = margelo.nitro.realfetch.NativeResponse

public extension NativeResponse {
  private typealias bridge = margelo.nitro.realfetch.bridge.swift

  /**
   * Create a new instance of `NativeResponse`.
   */
  init(status: Double, headers: [String]) {
    self.init(status, { () -> bridge.std__vector_std__string_ in
      var __vector = bridge.create_std__vector_std__string_(headers.count)
      for __item in headers {
        __vector.push_back(std.string(__item))
      }
      return __vector
    }())
  }

  var status: Double {
    @inline(__always)
    get {
      return self.__status
    }
    @inline(__always)
    set {
      self.__status = newValue
    }
  }
  
  var headers: [String] {
    @inline(__always)
    get {
      return self.__headers.map({ __item in String(__item) })
    }
    @inline(__always)
    set {
      self.__headers = { () -> bridge.std__vector_std__string_ in
        var __vector = bridge.create_std__vector_std__string_(newValue.count)
        for __item in newValue {
          __vector.push_back(std.string(__item))
        }
        return __vector
      }()
    }
  }
}
